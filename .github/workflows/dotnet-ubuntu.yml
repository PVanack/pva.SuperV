# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: dotnet-ubuntu

on: [push]

env:
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
  
    - name: Configure git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Install TDengine driver 
      run: sudo ./TDengine/install-TDengine-client.sh

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run Engine tests with coverage
      run: dotnet test --no-build --verbosity normal -p:TestTfmsInParallel=false -p:ParallelizeTestCollections=false --collect:"XPlat Code Coverage" --results-directory ./coverage pva.SuperV.EngineTests

    - name: Run API tests with coverage
      run: dotnet test --no-build --verbosity normal -p:TestTfmsInParallel=false -p:ParallelizeTestCollections=false --collect:"XPlat Code Coverage" --results-directory ./coverage pva.SuperV.ApiTests

    - name: Run Reqnroll scenarios with coverage
      run: dotnet test --no-build --verbosity normal -p:TestTfmsInParallel=false -p:ParallelizeTestCollections=false --collect:"XPlat Code Coverage" --results-directory ./coverage pva.SuperV.TestsScenarios

    - name: Generate code coverage summary report
      if: github.ref == 'refs/heads/master'
      uses: danielpalme/ReportGenerator-GitHub-Action@5.4.4
      with:
        verbosity: Info
        reports: './coverage/*/coverage.cobertura.xml'
        classfilters: -*.Generated*;-*.AppJsonSerializerContext;-System.Runtime.CompilerServices;-*Tests;-*Tests.*;-AutoGeneratedProgram
        targetdir: ./codeCoverage
        reporttypes: MarkdownSummaryGithub;Badges;Html_Dark;MHtml
        title: pva.SuperV
        tag: '${{ github.workflow}}_${{ github.run_id }}'

    - name: Setup Pages
      if: github.ref == 'refs/heads/master'
      uses: actions/configure-pages@v5

    - name: Upload coverage report to GitHub Pages
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-pages-artifact@v3
      with: 
        path: ./codeCoverage    

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
