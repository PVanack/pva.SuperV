# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: dotnet-ubuntu

on: [push]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Install TDengine driver 
      run: sudo ./TDengine/install-TDengine-client.sh

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run tests with coverage
      run: dotnet test --no-build --verbosity normal -property:ParallelizeTestCollections=false --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Generate code coverage summary report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.4.4
      with:
        verbosity: Info
        reports: './coverage/*/coverage.cobertura.xml'
        classfilters: -*.Generated*;-*.AppJsonSerializerContext;-System.Runtime.CompilerServices;-*Tests;-*Tests.*;-AutoGeneratedProgram
        targetdir: coverageReport
        reporttypes: MarkdownSummaryGithub;Badges;Html_Dark;MHtml
        title: pva.SuperV
        tag: '${{ github.workflow}}_${{ github.run_id }}'

    - name: Commit and Push code coverage badge
      run: |
        git clone https://gist.github.com/a37763530da2924b21070f862606eaa1.git
        git add ./coverageReport/badge_combined.svg
        git commit -m "Update coverage report"
        git push origin main
