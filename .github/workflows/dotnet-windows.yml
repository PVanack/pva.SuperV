# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: dotnet-windows

on: [push]

env:
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Install TDengine driver 
      run: .\TDengine\TDengine-client-3.3.6.0-Windows-x64.exe /verysilent

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run Engine tests with coverage
      run: dotnet test --no-build --verbosity normal -p:TestTfmsInParallel=false -p:ParallelizeTestCollections=false --collect:"XPlat Code Coverage" --results-directory ./coverage pva.SuperV.EngineTests

    - name: Run API tests with coverage
      run: dotnet test --no-build --verbosity normal -p:TestTfmsInParallel=false -p:ParallelizeTestCollections=false --collect:"XPlat Code Coverage" --results-directory ./coverage pva.SuperV.ApiTests

    - name: Run Reqnroll scenarios with coverage
      run: dotnet test --no-build --verbosity normal -p:TestTfmsInParallel=false -p:ParallelizeTestCollections=false --collect:"XPlat Code Coverage" --results-directory ./coverage pva.SuperV.TestsScenarios

    - name: Generate code coverage summary report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.4.4
      with:
        verbosity: Info
        reports: './coverage/*/coverage.cobertura.xml'
        classfilters: -*.Generated*;-*.AppJsonSerializerContext;-System.Runtime.CompilerServices;-*Tests;-*Tests.*;-AutoGeneratedProgram
        targetdir: ./codeCoverage
        reporttypes: MarkdownSummaryGithub;Badges;Html_Dark;MHtml
        title: pva.SuperV
        tag: '${{ github.workflow}}_${{ github.run_id }}'

    # Doesn't work: git push asks for user/pwd
    # - name: Commit and Push code coverage badge
    #   run: |
    #     cd ..
    #     git clone https://gist.github.com/PVanack/a37763530da2924b21070f862606eaa1.git a37763530da2924b21070f862606eaa1
    #     cp ./pva.SuperV/codeCoverage/badge_combined.svg ./a37763530da2924b21070f862606eaa1/
    #     cd a37763530da2924b21070f862606eaa1
    #     git config --global user.name "${{ secrets.GITHUB_TOKEN }}"
    #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
    #     git add ./badge_combined.svg
    #     git commit -m "Update coverage report"
    #     git push
